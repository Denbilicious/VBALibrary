'This function takes a named range of a sheet and generates an email from the content in said named range.
'In the following code the sheet where the data is stored is named "Report" and the named range is "reportrange"
'Code and explanation follows.

Option Explicit

Sub SendMail_Click()

Dim OutlookObj As Object
Dim OutlookMailItem As Object
Dim OutlookAttachment As Object
Dim CopyExcelData As Range

Application.ScreenUpdating = False

Report.Visible = xlSheetVisible
Report.Select
Report_Filter

QuoteDesign.Select

Set CopyExcelData = Nothing

Set CopyExcelData = Report.Range("reportrange").SpecialCells(xlCellTypeVisible)

If CopyExcelData Is Nothing Then
MsgBox "The Selection is not a range"

End If

With Application
.EnableEvents = False
.ScreenUpdating = False
End With

Set OutlookObj = CreateObject("Outlook.Application")
Set OutlookMailItem = OutlookObj.CreateItem(0)

With OutlookMailItem
.To = ""
.subject = ""
.HTMLBody = RangetoHTML(CopyExcelData)
.Display


End With

Report.Visible = xlSheetHidden


Application.ScreenUpdating = True


End Sub

Function RangetoHTML(rng As Range)
    Dim fso As Object
    Dim ts As Object
    Dim TempFile As String
    Dim TempWB As Workbook

    TempFile = Environ$("temp") & "/" & Format(Now, "dd-mm-yy h-mm-ss") & ".htm"

    'Copy the range and create a new workbook to past the data in
    rng.Copy
    Set TempWB = Workbooks.Add(1)
    With TempWB.Sheets(1)
        .Cells(1).PasteSpecial Paste:=8
        .Cells(1).PasteSpecial xlPasteValues, , False, False
        .Cells(1).PasteSpecial xlPasteFormats, , False, False
        .Cells(1).Select
        Application.CutCopyMode = False
        On Error Resume Next
        .DrawingObjects.Visible = True
        .DrawingObjects.Delete
        On Error GoTo 0
    End With

    'Publish the sheet to a htm file
    With TempWB.PublishObjects.Add( _
         SourceType:=xlSourceRange, _
         filename:=TempFile, _
         Sheet:=TempWB.Sheets(1).Name, _
         source:=TempWB.Sheets(1).UsedRange.Address, _
         HtmlType:=xlHtmlStatic)
        .Publish (True)
    End With

    'Read all data from the htm file into RangetoHTML
    Set fso = CreateObject("Scripting.FileSystemObject")
    Set ts = fso.GetFile(TempFile).OpenAsTextStream(1, -2)
    RangetoHTML = ts.ReadAll
    ts.Close
    RangetoHTML = Replace(RangetoHTML, "align=center x:publishsource=", _
                          "align=left x:publishsource=")

    'Close TempWB
    TempWB.Close savechanges:=False

    'Delete the htm file we used in this function
    Kill TempFile

    Set ts = Nothing
    Set fso = Nothing
   Set TempWB = Nothing
End Function

'Added to GitHub repo 08/09/2017 by Stephen Denbigh (Denbilicious)
